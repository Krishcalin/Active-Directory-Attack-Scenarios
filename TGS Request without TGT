# This script is a simplified example. For production use, a SIEM is recommended.
$logonHistory = @{}

# Capture TGT requests (ID 4768)
Get-WinEvent -LogName "Security" -FilterHashtable @{
    Logname = 'Security'
    ID = 4768
} -MaxEvents 1000 | ForEach-Object {
    $eventXml = [xml]$_.ToXml()
    $targetUser = $eventXml.Event.EventData.Data[1].'#text'
    $logonHistory[$targetUser] = $_.TimeCreated
}

# Capture TGS requests (ID 4769)
Get-WinEvent -LogName "Security" -FilterHashtable @{
    Logname = 'Security'
    ID = 4769
} -MaxEvents 1000 | ForEach-Object {
    $eventXml = [xml]$_.ToXml()
    $targetUser = $eventXml.Event.EventData.Data[1].'#text'

    if (-not $logonHistory.ContainsKey($targetUser)) {
        Write-Warning "Suspicious TGS request for '$targetUser' with no recent TGT request detected."
        Write-Host "  Time: $($_.TimeCreated)"
    } else {
        # Check if TGT was requested shortly before TGS
        $timeDifference = $_.TimeCreated - $logonHistory[$targetUser]
        if ($timeDifference.TotalMinutes -gt 60) {
            Write-Warning "TGS request for '$targetUser' occurred long after initial TGT. Possible ticket reuse."
            Write-Host "  Time: $($_.TimeCreated)"
        }
    }
}
